library('imputeTS')
library(forecast)
library(tidyverse)
library(ggcorrplot) # for ggcorrplot()
library(hrbrthemes)

#Reading the data from a csv file.
data <- read.csv("https://intro-datascience.s3.us-east-2.amazonaws.com/HMO_data.csv", stringsAsFactors = FALSE)
#7,582 X 14

#Displaying first 6 rows of the data
head(data)
   
```

```{r}
#renaming the column "X" to "id"
names(data)[1] <- "id"

head(data) #validating if renaming worked fine.
```

```{r}
#Checking the data types of the dataframe
str(data)
```
#Cleaning the Data

```{r}
#Checking and cleaning the data
sum(is.na(data))

#So, there are 158 NAs present in the data
```
#Checking every column in the dataframe for data consistency and NAs
```{r}
#Age
unique(data$age)
sum(is.na(data$age))
#0

#Understanding the descriptive statistics for age
summary(data$age)

#Creating a histogram for the age
hist(data$age, breaks= 20)
#From the histogram we can observe that the data is non-uniform as
#The there are lot of people with age below 20.

#Plotting a box plot for age
boxplot(data$age)

#Scatterplot of age vs cost
library(MASS)
library(ggplot2)
ggplot(data=data) + aes(x=age, y=cost) + geom_point() +
geom_smooth(method="lm", se=FALSE)
```


```{r}
#BMI
unique(data$bmi)

#Checking for NAs
sum(is.na(data$bmi))
#78

#Interpolating the BMI column
data$bmi <- na_interpolation(data$bmi)
#Checking for NAs again to confirm if all the values have been interpolated
sum(is.na(data$bmi))


#Creating a histogram for the age
hist(data$bmi, breaks= 20) 
#We can observe from the histogram that the distribution is normal


#Plotting a box plot for age
boxplot(data$bmi)

#Scatterplot of bmi vs cost
library(MASS)
library(ggplot2)
ggplot(data=data) + aes(x=bmi, y=cost) + geom_point() +
geom_smooth(method="lm", se=FALSE)
```



```{r}
#children
unique(data$children)

#Checking for NAs
sum(is.na(data$children))
#0

#Creating a histogram for children
hist(data$children)

#Creating boxpot for children
boxplot(data$children)

#Scatterplot of number of children vs cost
library(MASS)
library(ggplot2)
ggplot(data=data) + aes(x=children, y=cost) + geom_point() +
geom_smooth(method="lm", se=FALSE)
```

```{r}
#smoker
unique(data$smoker)
#"yes" "no"

#Checking for NAs
sum(is.na(data$smoker))
#0


# #Trimming the string
# data$smoker <- trimws(data$smoker, which = c("both"), whitespace = "[ \t\r\n]")

```

```{r}
#location
unique(data$location)
#"CONNECTICUT"   "RHODE ISLAND"  "MASSACHUSETTS" "PENNSYLVANIA"  "MARYLAND"      "NEW JERSEY"    "NEW YORK"
sum(is.na(data$location))
#0
```

```{r}
#location type

unique(data$location_type)
#"Urban"   "Country"
sum(is.na(data$location_type))
#0
```

```{r}
#education level 

unique(data$education_level)
#"Bachelor"          "Master"            "PhD"               "No College Degree"
sum(is.na(data$education_level))
#0
```
```{r}
#Yearly Physical

unique(data$yearly_physical)
#"No"  "Yes"
sum(is.na(data$yearly_physical))
#0

```
```{r}
#Exercise

unique(data$exercise)
#"Active"     "Not-Active"
sum(is.na(data$exercise))
#0
```
```{r}
#Married

unique(data$married)
#"Married"     "Not_Married"
sum(is.na(data$married))
#0
```


```{r}
#Hypertension

unique(data$hypertension)
#0  1 NA

#Checking for NAs
sum(is.na(data$hypertension))
#80

#Interpolating the NAs
data$hypertension <- na_interpolation(data$hypertension)

#Checking for NAs again QC step
sum(is.na(data$hypertension))
#0

#Checking the type of the data
class(data$hypertension)
"numeric"

#As the data is inconsistent changing the type of integer
data$hypertension <- as.integer(data$hypertension)

head(data$hypertension)
```

```{r}
#Gender

unique(data$gender)
#"female" "male" 
sum(is.na(data$gender))
#0
```

```{r}
#Cost

#Checking for NAs
sum(is.na(data$cost))
#0

#Descriptive statistics for cost
summary(data$cost)
# Min. 1st Qu.  Median  Mean 3rd Qu.    Max. 
#   2     970    2500    4043    4775   55715 

#Creating histogram for the cost
hist(data$cost, breaks = 50) 
#The distribution is Right-skewed

#Creating a boxplot for cost
boxplot( data$cost, data = data)

#QC Step
#Finally checking again if NAs are present
sum(is.na(data))
#0 <- No NAs
```


```{r}
#Bucketing the Age
data$Age_Category <- ifelse(data$age < 26, "Young Adults", NA)
data$Age_Category <- ifelse(data$age >= 26 & data$age < 36, "Adults", data$Age_Category)
data$Age_Category <- ifelse(data$age >= 36 & data$age < 51, "Middle Aged Adults", data$Age_Category)
data$Age_Category <- ifelse(data$age >= 51, "Old Aged Adults", data$Age_Category)

head(data)
```
#Formatting the data
```{r}
data_new <- data

#Changing the type of the data_new

#smoker
data_new$smoker <- ifelse(data_new$smoker == "yes", 1, 0)
class(data_new$smoker)
data_new$smoker <- as.integer(data_new$smoker)

#Exercise
data_new$exercise <- ifelse(data_new$exercise == "Active", 1, 0)
class(data_new$exercise)
data_new$exercise <- as.integer(data_new$exercise)

#Married 
data_new$married <- ifelse(data_new$married == "Married", 1, 0)
class(data_new$married)
data_new$married <- as.integer(data_new$married)

#Gender
data_new$gender <- ifelse(data_new$gender == "male", 1, 0)
class(data_new$gender)
data_new$gender <- as.integer(data_new$gender)

#Yearly Physical
data_new$yearly_physical <- ifelse(data_new$yearly_physical == "Yes", 1, 0)
class(data_new$yearly_physical)
data_new$yearly_physical <- as.integer(data_new$yearly_physical)

#Location Type
data_new$location_type <- ifelse(data_new$location_type == "Urban", 1, 0)
class(data_new$location_type)
data_new$location_type <- as.integer(data_new$location_type)

#Re-formatting the data
data_new <- data_new[,c(2:5,7,9:14)]

head(data_new)



```

#Finding the correlation between the attributes
```{r}
#Creating a heatmap for correlation
cors <- cor(data_new, use = "pairwise.complete.obs")

# using ggcorrplot() to plot the correlation matrix heat map
ggcorrplot(cors)


#From the correlation heat map we observed that age,bmi,children,smoker,excercise,hypertension and gender are the significant attributes to cost

```

```{r}
#check for outliers in bmi
boxplot(data_new$bmi)
quartiles <- quantile(data_new$bmi, probs=c(.25, .75), na.rm = FALSE)
IQR <- IQR(data_new$bmi)
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR 
data_new <- subset(data_new, data_new$bmi > Lower & data_new$bmi <= Upper-1)
boxplot(data_new$bmi)
nrow(as.data.frame(data_new$bmi))
```



```{r}
#smoker
data_new$smoker <- ifelse(data_new$smoker == 1, "yes", "no")
class(data_new$smoker)

#Exercise
data_new$exercise <- ifelse(data_new$exercise == 1, "Active", "Not-Active")
class(data_new$exercise)

#Married 
data_new$married <- ifelse(data_new$married == 1, "Married", "Not_Married")
class(data_new$married)

#Gender
data_new$gender <- ifelse(data_new$gender == 1, "male", "female")
class(data_new$gender)

#Yearly Physical
data_new$yearly_physical <- ifelse(data_new$yearly_physical == 1, "Yes", "No")
class(data_new$yearly_physical)

#Location Type
data_new$location_type <- ifelse(data_new$location_type == 1, "Urban","Country")
class(data_new$location_type)

```

```{r}
#converting categorical features into factor variables 
data_new$smoker<-as.factor(data_new$smoker)
data_new$location_type<-as.factor(data_new$location_type)
data_new$yearly_physical<-as.factor(data_new$yearly_physical)
data_new$exercise<- as.factor(data_new$exercise)
data_new$married<-as.factor(data_new$married)
data_new$hypertension<-as.factor(data_new$hypertension)
data_new$gender<-as.factor(data_new$gender)
```

```{r}
#creating linear model using age, bmi, children, smoker, exercise, hypertension
#and gender as predictors to predict cost
model<- lm(cost~age+bmi+children+smoker+exercise+hypertension+gender,data=data_new)
summary(model)

```


```{r}
#install.packages('caret')
library('kernlab')
library('caret')
#SVM to predict people having costly health care cost
#to check skewness for deciding measure of 
#central tendency to compare

hist(data_new$cost)
#plotted histogram of cost to check skewness for deciding measure of 
#central tendency to compare.it is clear from histogram that cost variable is 
#right skewed which means median>mean.So, using median as measure to split cost
#as costly and cheap.
#created new attribute expensive

#check for outliers in cost
boxplot(data_new$cost)
quartiles <- quantile(data_new$cost, probs=c(.25,.75), na.rm = FALSE)
third_quartile1 <- quantile(data_new$cost, probs=.75, na.rm = FALSE)
third_quartile1
IQR <- IQR(data_new$cost)
Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR 
data_new <- subset(data_new, cost >= Lower & cost <= Upper)
boxplot(data_new$cost)
nrow(as.data.frame(data_new$bmi))

#Creating a new variable 'expensive'
data_new$expensive <- as.factor(ifelse(data_new$cost>third_quartile1,'costly','cheap'))
data_new

#Partitioning the data into test and train to create a SVM model
intrain <- createDataPartition(y = data_new$expensive , p= 0.75, list = FALSE) #Creating a 25-75 split for train & test
training <- data_new[intrain,] #train data set
testing <- data_new[-intrain,]# test data set
trctrl <- trainControl(method = "repeatedcv", number = 10, repeats = 3)

#Using the SVM model to predict if the customer is expernsive or not
svm_Linear <- train(expensive~age+bmi+children+smoker+exercise+hypertension+gender, data = training, method = "svmLinear",
trControl=trctrl,
preProcess = c("center", "scale"),
tuneLength = 10)
svm_Linear

#save to rda file
save(svm_Linear, file = "model.rda")


#predict people for which healthcare would be expensive
predOut2_df <- predict(svm_Linear, newdata = testing)
predOut2_df

#using confusion matrix to check performance of model
confusionMatrix(table(predOut2_df, testing$expensive))

#We observe that the model displays 96.6% Sensitivity and 85% model accuracy
training
```

```{r}
#MAP creation depicting location wise healthcare cost
df_map <- data %>% group_by(location) %>% summarise(mean(cost))

us <- map_data("state")
us$state_name <- tolower(us$region)
coord_df2 <- data.frame(loc=tolower(df_map$location),avg_cost=df_map$`mean(cost)`)
us_with_coords2 <- merge(us,coord_df2, by.x='state_name',by.y='loc',all.x=TRUE )
us_with_coords2 <- us_with_coords2 %>% arrange(order)

Mymap2 <- ggplot(us_with_coords2,aes(map_id= region)) + geom_polygon(color="black",aes(x=long,y=lat,group=group,fill=avg_cost))  +
expand_limits(x=us_with_coords2$long, y=us_with_coords2$lat)+coord_map("mercator") +
  ggtitle("US Map with location wise healthcare cost")
Mymap2

#Second map view  displays a zoom view for the above map
us <- map_data("state")
us$state_name <- tolower(us$region)
coord_df2 <- data.frame(loc=tolower(df_map$location),avg_cost=df_map$`mean(cost)`)
us_with_coords2 <- merge(us,coord_df2, by.x='state_name',by.y='loc')
us_with_coords2 <- us_with_coords2 %>% arrange(order)



Mymap3 <- ggplot(us_with_coords2,aes(map_id= region)) + geom_polygon(color="black",aes(x=long,y=lat,group=group,fill=avg_cost))  +
expand_limits(x=us_with_coords2$long, y=us_with_coords2$lat)+coord_map("mercator") +
  ggtitle("Zoomed Viewed of the Map")
Mymap3
